:: StoryTitle
onboarding_example


:: StoryData
{
	"ifid": "DEC7B08C-8D6C-416E-A86D-180A53DBF339",
	"format": "ChatbookViewer",
	"format-version": "0.0.1",
	"start": "start",
	"tag-colors": {
		"auto": "green",
		"metadata": "blue",
		"prologue": "blue",
		"prompt-firstName": "yellow",
		"speaker-bot": "orange",
		"speaker-system": "purple",
		"system": "purple"
	},
	"zoom": 1
}


:: Story JavaScript [script]
story.directive("@yaml", function(info, rendered, passage, story) {
  // "story" and "passage" are the current story & passage respectively
  console.log("YAML data from " + passage.id);
  console.log("Directive contained: " + info);
  return rendered;
});


:: gql references [system prologue] {"position":"25,125","size":"200,100"}
###@yaml
CURRENT_AUTHORIZATION: &CURRENT_AUTHORIZATION |
  query currentAuthorization {
	currentUser {
	  id,
	  firstName,
	  authorizations (orderBy: PRIMARY_KEY_ASC) {
		nodes {
		  providerId,
		  providerEmails
		}
	  }
	}
  }

UPDATE_USER_DATA: &UPDATE_USER_DATA |
  mutation updateUserData ($input: UpdateUserInput!) {
	updateUser(input:$input) {
	  user {
		id
	  }
	}
  }

UPDATE_USER_DATA_VARS: &UPDATE_USER_DATA_VARS |
  {
	"input": {
	  "id": {{userId}},
	  "patch": {
		"firstName": "{{firstName}}",
		"aboutPronoun": "{{aboutPronoun}}",
		"conjugatedPronoun": "{{conjugatedPronoun}}",
		"possessivePronoun": "{{possessivePronoun}}",
		"primaryEmail": "{{email}}"
	  }
	}
  }
###


:: Name Not OK [speaker-bot prompt-firstName] {"position":"475,125","size":"100,100"}
Okay, what name would you like me to use?

[[Confirm Email]]


:: Confirm Email [speaker-bot multiline] {"position":"475,275","size":"100,100"}
Ok. And the email {{which origin "google-oauth2.+" "Google" "linkedin.+" "LinkedIn" ".*" "your email provider"}} gave me is {{email}}.

You can always update that later.

One last thing

How should I refer to you?

[["He" pronouns (he/him)]]
[["She" pronouns (she/her)]]
[["They" pronouns (they/them)]]
[["Ze" pronouns (ze/zir)]]
[[I'd like to be specific]]
[[Just use my name]]


:: "He" pronouns (he/him) [auto system] {"position":"300,425","size":"100,100"}
#@yaml set: aboutPronoun him
#@yaml set: conjugatedPronoun he
#@yaml set: posessivePronoun his

[[Save]]


:: "She" pronouns (she/her) [auto system] {"position":"425,425","size":"100,100"}
#@yaml set: aboutPronoun her
#@yaml set: conjugatedPronoun she
#@yaml set: posessivePronoun her

[[Save]]


:: "They" pronouns (they/them) [auto system] {"position":"550,425","size":"100,100"}
#@yaml set: aboutPronoun them
#@yaml set: conjugatedPronoun they
#@yaml set: posessivePronoun their

[[Save]]


:: "Ze" pronouns (ze/zir) [auto system] {"position":"675,425","size":"100,100"}
#@yaml set: aboutPronoun zir
#@yaml set: conjugatedPronoun ze
#@yaml set: posessivePronoun zir

[[Save]]


:: I'd like to be specific [speaker-bot auto] {"position":"800,425","size":"100,100"}
Okay. You can do that in your profile once we're done here.

[[Save]]


:: Just use my name [auto speaker-bot] {"position":"925,425","size":"100,100"}
#@yaml set: aboutPronoun {{firstName}}
#@yaml set: conjugatedPronoun {{firstName}}
#@yaml set: posessivePronoun {{firstName}}

No problem

[[Save]]


:: Save [speaker-bot auto] {"position":"600,725","size":"100,100"}
That's everything, let me save it for you.

[[Save Action]]


:: start [speaker-bot multiline] {"position":"300,125","size":"100,100"}
###@yaml
- graphql:
    id: currentAuthorization
    query: *CURRENT_AUTHORIZATION
    store:
      - "currentUser.id": userId
      - "currentUser.firstName": firstName
      - "currentUser.authorizations.nodes[0].providerEmails[0]": email
      - "currentUser.authorizations.nodes[0].providerId": origin
###

Hey there!

I'm Karl (he/him). The AI ibex of Aibex.

I asked {{which origin "google-oauth2.+" "Google" "linkedin.+" "LinkedIn" ".*" "your email provider"}} what your name was, and they said "{{default firstName "to just use your email address"}}". Is that right?

[[Yes->Confirm Email]]
[[No->Name Not OK]]


:: Next Steps [speaker-bot auto] {"position":"750,875","size":"100,100"}
Next up, I'd like to walk you through how Aibex works.
close this, and when you're ready, let's chat about "What Is Aibex"

[[end]]


:: end [system] {"position":"925,875","size":"100,100"}
#@yaml end: true


:: Save Action [auto speaker-bot] {"position":"600,875","size":"100,100"}
###@yaml
graphql:
  id: updateUserData
  query: *UPDATE_USER_DATA
  variables: *UPDATE_USER_DATA_VARS
  format: true
  store:
    - SUCCESS: updateResult
###

{{~# if updateResult ~}}
  Great, all saved
  {{~> line ~}}
  You can update all of this from your profile, too.
{{~ else ~}}
  Awkward. Something went wrong. We'll come back to this
{{~/ if ~}}

[[Next Steps]]


